{"version":3,"sources":["app/utils/auth.context.js","app/todo-portal/components/Todo-card/index.jsx","app/todo-portal/components/Todo-listing/index.jsx","app/todo-portal/components/Search/searchBar.jsx","app/todo-portal/components/Search/index.jsx","app/_shared/constants/api.endpoints.js","app/utils/api.js","app/utils/task.api.js","app/todo-portal/components/Todo-modal/index.jsx","app/todo-portal/index.jsx","app/_shared/components/Login/index.jsx","app/_shared/components/Header/index.jsx","app/_shared/components/ErrorBoundries/index.jsx","app/app.jsx","serviceWorker.js","index.js"],"names":["AuthContext","createContext","useAuthContext","useContext","TodoCard","memo","task","addEditTask","deleteTask","markAscomplete","role","_id","details","isActive","childrens","updatedAt","renderButtons","floatDir","style","display","float","className","onClick","aria-hidden","Badge","variant","Col","md","key","Card","border","fontSize","Body","Title","marginRight","map","subTask","ListGroup","Item","Text","Footer","format","withTitle","prototype","PropTypes","shape","bool","isRequired","name","string","director","TodoListing","tasks","tasksList","Container","Row","length","defaultProps","SearchBar","props","InputGroup","Form","Control","aria-describedby","placeholder","type","options","value","label","SearchArea","onHandleChange","useState","search","sortBy","genre","query","setQuery","useEffect","onChange","evt","target","Button","API_ENDPOINTS","baseURL","window","location","href","TASK","api","axios","create","interceptors","request","use","config","localStorage","getItem","headers","error","Promise","reject","response","indexOf","status","removeItem","param","queryParams","trackPromise","get","params","body","post","put","delete","getTasks","a","API","deleteTaskDetails","taskId","addTaskDetails","updateTaskDetails","TaskCreateEdit","show","onHide","action","taskObj","actioncallback","parentId","setTask","Modal","size","centered","Header","closeButton","onSubmit","event","preventDefault","Group","as","Label","column","sm","required","TodoPortal","setTasks","openTask","displayTask","currentTask","setAction","closeModal","fetchTasks","data","toast","notify","statusText","position","resp","message","includes","debounceSearch","useRef","_","debounce","Search","current","LoginComponent","setRole","controlId","text","loginShow","setLoginShow","Navbar","expand","bg","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","Login","ErrorBoundary","state","hasError","info","this","children","React","Component","App","currentRole","Provider","setItem","top","left","promiseTracker","usePromiseTracker","color","background","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.4bc92fd4.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\n\nconst AuthContext = createContext();\n\nexport default AuthContext;\n\nexport function useAuthContext() {\n    return useContext(AuthContext);\n}","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from 'react-moment';\nimport { Badge, Card, Col, ListGroup } from \"react-bootstrap\";\nimport { useAuthContext } from '../../../utils/auth.context';\n\nconst TodoCard = memo(({ task, addEditTask, deleteTask, markAscomplete }) => {\n\n    const { role } = useAuthContext();\n    const {\n        _id,\n        details,\n        isActive,\n        childrens,\n        updatedAt\n    } = task;\n\n    const renderAddSubTask = () => {\n        return (<i className=\"fa fa-plus\" aria-hidden=\"true\" onClick={() => addEditTask(null, 'Add sub-task', _id)} />)\n    }\n\n    const renderButtons = (task, floatDir) => {\n        return (\n            task.isActive ? (<div style={{ display: 'inline', float: floatDir }}>\n                <i className=\"fa fa-edit mr-2\" onClick={() => addEditTask(task, 'Edit task details')}></i>\n                <i className=\"fa fa-trash mr-2\" onClick={() => deleteTask(task)}></i>\n                <i className='fa fa-check-circle mr-2' aria-hidden=\"true\" onClick={() => markAscomplete(task)} />\n                {floatDir === 'left' ? renderAddSubTask() : ''}\n            </div>) : <div style={{ display: 'inline', float: floatDir }}>\n                    <Badge variant=\"secondary\">Completed</Badge>\n                </div>\n        )\n    }\n\n    const renderSubTasks = () => {\n        return childrens.map(subTask => {\n            return (\n                <ListGroup.Item key={subTask._id}>\n                    {subTask.details}\n                    {renderButtons(subTask, 'right')}\n                </ListGroup.Item>)\n        })\n    }\n\n    return (\n        <Col md={4}\n            className=\"taskCard\"\n            key={_id} >\n            <Card border={isActive ? 'dark': 'success'}\n                style={{ fontSize: '1.02em' }}\n                className=\"mb-2\">\n                <Card.Body>\n                    <Card.Title>\n                        <span className=\"fa fa-tasks\" style={{ marginRight: \"15px\" }}></span>\n                        {details}\n                    </Card.Title>\n                    {renderSubTasks()}\n                    <Card.Text>\n\n                    </Card.Text>\n                    {role === 'admin' ? renderButtons(task, 'left') : ''}\n                </Card.Body>\n                <Card.Footer>\n                    <small className=\"text-muted\">\n                        Last updated At:{' '}\n                        <Moment format=\"hh:mm a\" withTitle>\n                            {updatedAt}\n                        </Moment>\n                    </small>\n                </Card.Footer>\n            </Card>\n        </Col >\n    )\n})\n\nTodoCard.prototype = {\n    task: PropTypes.shape({\n        _id: PropTypes.bool.isRequired,\n        name: PropTypes.string.isRequired,\n        director: PropTypes.string.isRequired,\n    })\n};\nexport default TodoCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TodoCard from \"../Todo-card\";\nimport { Row, Container } from \"react-bootstrap\";\n\nfunction TodoListing({ tasks, addEditTask, deleteTask, markAscomplete }) {\n  let tasksList = tasks.map(task =>\n    <TodoCard key={task._id} task={task}\n    addEditTask={addEditTask} deleteTask={deleteTask} markAscomplete={markAscomplete} />\n  );\n\n  return (\n    <Container>\n      <Row>{tasksList.length > 0 ? tasksList : ''}</Row>\n    </Container>\n  );\n}\n\nTodoListing.defaultProps = {};\nTodoListing.propTypes = {\n  tasks: PropTypes.array.isRequired\n};\nexport default TodoListing;\n","import React from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\nfunction SearchBar(props) {\n  return (\n    <InputGroup className=\"search-box\">\n      <Form.Control\n        aria-describedby=\"inputGroup-sizing-sm\"\n        placeholder=\"Search\"\n        type=\"text\"\n        {...props}\n      />\n    </InputGroup>\n  );\n}\nSearchBar.defaultProps = {\n  // text: \"\"\n};\nSearchBar.propTypes = {\n  placeholder: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nexport default SearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\nimport SearchBar from \"./searchBar\";\nimport { useAuthContext } from '../../../utils/auth.context';\n\n\nconst options = [\n  { value: 'All', label: 'all' },\n  { value: 'Active', label: 'active' },\n  { value: 'Completed', label: 'completed' },\n];\n\nfunction SearchArea({ onHandleChange, addEditTask }) {\n\n  const { role } = useAuthContext();\n  const [query, setQuery] = useState({\n    search: '',\n    sortBy: options[0],\n    genre: []\n  })\n\n  useEffect(() => {\n    onHandleChange(query)\n  }, [query])\n\n  return (\n    <Container className=\"search-area\">\n      <Row>\n        <Col md={3}>\n          <SearchBar\n            placeholder=\"Search task\"\n            name=\"search\"\n            type=\"text\"\n            onChange={(evt) => setQuery({ ...query, search: evt.target.value })}\n          />\n        </Col>\n        {role === 'admin' ? <Col>\n          <Button className=\"btn btn-secondary\"\n            onClick={() => addEditTask(null,'Add task')}>Add Task</Button>\n        </Col> : ''}\n      </Row>\n    </Container>\n  );\n}\n\nSearchArea.propTypes = {\n  onHandleChange: PropTypes.func.isRequired\n};\nexport default SearchArea;\n","const API_ENDPOINTS = {\n    baseURL: window.location.href, //server URL\n    TASK: '/api/tasks',\n}\nexport default API_ENDPOINTS;\n","import axios from 'axios';\nimport { trackPromise } from 'react-promise-tracker';\nimport API_ENDPOINTS from '../_shared/constants/api.endpoints';\n\nconst api = axios.create({\n  baseURL: API_ENDPOINTS.baseURL,\n});\n\napi.interceptors.request.use(\n  (config) => {\n    const options = { ...config };\n    if (localStorage.getItem('role')) {\n      options.headers.role = localStorage.getItem('role');\n    }\n    options.headers['Content-Type'] = 'application/json';\n    return options;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response && [401, 403].indexOf(error.response.status) !== -1) {\n      localStorage.removeItem('role');\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst get = (param, queryParams) => trackPromise(api.get(param, { params: queryParams }));\n\nconst post = (param, body) => trackPromise(api.post(param, body));\n\nconst put = (param, body) => trackPromise(api.put(param, body));\n\nconst patch = (param, body) => trackPromise(api.patch(param, body));\n\nconst del = (param) => trackPromise(api.delete(param));\n\nexport default {\n  get,\n  post,\n  put,\n  patch,\n  deleteIt: del,\n};\n","import API from './api';\nimport API_ENDPOINTS from '../_shared/constants/api.endpoints';\n\nconst getTasks = async (query) => {\n    let params = {\n        search: query.search,    \n    }\n    return API.get(`${API_ENDPOINTS.TASK}`, params);\n};\n\nconst deleteTaskDetails = async (taskId) => {\n    return API.deleteIt(`${API_ENDPOINTS.TASK}/${taskId}`);\n}\n\nconst addTaskDetails = async (task) => {\n    return API.post(`${API_ENDPOINTS.TASK}`, task);\n}\n\nconst updateTaskDetails = async (task) => {\n    return API.put(`${API_ENDPOINTS.TASK}/${task._id}`, task);\n}\n\nexport { getTasks, deleteTaskDetails, updateTaskDetails, addTaskDetails};\n","import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap'\n\nconst TaskCreateEdit = ({ show, onHide, action, taskObj, actioncallback }) => {\n\n    const [task, setTask] = useState({\n        details: '',\n        isActive: true,\n        parentId: null\n    })\n\n    useEffect(() => {\n        if (taskObj) {\n            setTask(taskObj);\n        }\n    }, [taskObj]);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        actioncallback(action, task);\n    }\n\n    return (\n        <Modal size=\"md\" show={show} onHide={onHide} centered>\n            <Modal.Header closeButton>\n                <Modal.Title>{action}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group as={Row} >\n                        <Form.Label column sm=\"2\">\n                            Task\n                        </Form.Label>\n                        <Col sm=\"10\">\n                            <Form.Control type=\"text\"\n                                placeholder=\"Enter What needs to be done?\"\n                                value={task.details || ''}\n                                onChange={(evt) => setTask({ ...task, details: evt.target.value })}\n                                required />\n                        </Col>\n                    </Form.Group>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={onHide}>\n                            Close\n                        </Button>\n                        <Button type=\"submit\" variant=\"primary\">\n                            Save Changes\n                        </Button>\n                    </Modal.Footer>\n                </Form>\n            </Modal.Body>\n        </Modal>)\n}\n\nexport default TaskCreateEdit;","import React, { useState, useRef } from 'react';\nimport { Container } from 'react-bootstrap';\nimport _ from \"lodash\";\nimport toast from 'toasted-notes';\nimport { TodoListing, SearchComponent } from \"./components\";\nimport { getTasks, deleteTaskDetails, updateTaskDetails, addTaskDetails } from \"../utils/task.api\";\nimport TodoModalComponent from './components/Todo-modal';\n\nfunction TodoPortal() {\n  const [tasks, setTasks] = useState([]);\n  const [query, setQuery] = useState({});\n  const [openTask, displayTask] = useState(false);\n  const [task, currentTask] = useState({});\n  const [action, setAction] = useState('Add');\n\n\n  const openTaskModal = () => {\n    return <TodoModalComponent show={openTask}\n      onHide={closeModal} action={action}\n      taskObj={task} actioncallback={actioncallback} />\n  }\n\n  const closeModal = () => {\n    currentTask({});\n    displayTask(false);\n  }\n\n  const fetchTasks = async (query) => {\n    try {\n      const tasks = await getTasks(query);\n      setTasks(tasks.data.data);\n    } catch (err) {\n      toast.notify(`${err.response.statusText}`, {\n        position: 'top',\n      });\n    }\n  }\n\n  const addEditTask = (task, action, parentId) => {\n    setAction(action);\n    displayTask(true);\n    currentTask({ ...task, parentId });\n  }\n\n  const markAscomplete = async(task) => {\n    task.isActive = false;\n    try {\n        const resp = await updateTaskDetails(task);\n        toast.notify(`${resp.data.message}`, {\n          position: 'top',\n        });\n    }catch(err){\n      toast.notify(`${err.response.statusText}`, {\n        position: 'top',\n      });\n    }\n    fetchTasks(query);\n  }\n\n  const actioncallback = async (action, task) => {\n    let resp;\n    try {\n      if (action.includes('Edit')) {\n        resp = await updateTaskDetails(task);\n      } else {\n        resp = await addTaskDetails(task);\n      }\n      toast.notify(`${resp.data.message}`, {\n        position: 'top',\n      });\n      displayTask(false);\n      currentTask({});\n    } catch (err) {\n      toast.notify(`${err.response.statusText}`, {\n        position: 'top',\n      });\n    }\n    fetchTasks(query);\n  }\n\n  const deleteTask = async (task) => {\n    try {\n      const resp = await deleteTaskDetails(task._id);\n      toast.notify(`${resp.data.message}`, {\n        position: 'top',\n      });\n      fetchTasks(query);\n    } catch (err) {\n      toast.notify(`${err.response.statusText}`, {\n        position: 'top',\n      });\n    }\n  }\n\n  const debounceSearch = useRef(\n    _.debounce(query => {\n      fetchTasks(query);\n      setQuery(query);\n    }, 1000)\n  );\n\n  const onHandleChange = (query) => {\n    debounceSearch.current(query);\n  }\n\n  return (\n    <Container>\n      <SearchComponent onHandleChange={onHandleChange}\n        addEditTask={addEditTask} />\n      <hr />\n      {tasks ? <TodoListing tasks={tasks} deleteTask={deleteTask}\n        addEditTask={addEditTask}  markAscomplete={markAscomplete} /> : ''}\n      {openTaskModal()}\n    </Container>\n  )\n}\n\nexport default TodoPortal;","import React, { useState } from \"react\";\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap';\n\nconst LoginComponent = (props) => {\n    let [role, setRole] = useState('');\n\n    return (\n        <Modal  {...props}>\n            <Modal.Header closeButton>\n                <Modal.Title>Enter Your Role</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                        <Form.Label column sm=\"2\">\n                            Role\n                        </Form.Label>\n                        <Col sm=\"10\">\n                            <Form.Control type=\"text\"\n                                placeholder=\"Enter your role\"\n                                onChange={(evt) => setRole(evt.target.value)} />\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={props.onHide}>\n                    Close\n          </Button>\n                <Button variant=\"primary\" onClick={() => props.onSubmit(role)}>\n                    Save Changes\n          </Button>\n            </Modal.Footer>\n        </Modal>)\n}\n\nexport default LoginComponent;","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport toast from 'toasted-notes';\nimport { Navbar, Nav } from 'react-bootstrap'\nimport LoginComponent from '../Login';\nimport { useAuthContext } from '../../../utils/auth.context';\n\nfunction Header({ text }) {\n\n  const { role, setRole } = useAuthContext();\n  const [loginShow, setLoginShow] = useState(false);\n\n  const onSubmit = (role) => {\n    setRole(role);\n    setLoginShow(false);\n    if (role === 'admin') {\n      toast.notify(`You are admin now`, {\n        position: 'top',\n      });\n    }\n  }\n\n  const openLoginModal = () => {\n    return <LoginComponent show={loginShow}\n      onHide={() => setLoginShow(false)} onSubmit={onSubmit} />\n  }\n\n  return (\n    <Navbar expand=\"lg\" variant=\"dark\" bg=\"dark\">\n      <Navbar.Brand href=\"#home\">{text}</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n        <Nav>\n          {role !== 'admin' ? <Nav.Link onClick={() => setLoginShow(true)}>Login</Nav.Link> :\n            <Nav.Link onClick={() => setRole()}>Logout</Nav.Link>}\n        </Nav>\n      </Navbar.Collapse>\n      {openLoginModal()}\n    </Navbar>\n  );\n}\nHeader.defaultProps = {\n  text: \"Todos App\"\n};\nHeader.propTypes = {\n  text: PropTypes.string\n};\nexport default Header;\n","import React from \"react\";\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n","import React, { useState } from \"react\";\nimport MainComponent from \"./todo-portal\";\nimport { Header, ErrorBoundries } from \"./_shared/components\";\nimport { usePromiseTracker } from 'react-promise-tracker';\nimport Loader from 'react-promise-loader';\nimport 'toasted-notes/src/styles.css';\nimport AuthContext from './utils/auth.context';\n\n\nfunction App() {\n  const currentRole = localStorage.getItem('role');\n\n  const [role, setRole] = useState(currentRole);\n\n  const setAuthUserRole = (role) => {\n    if (role) {\n      localStorage.setItem('role', role);\n    } else {\n      localStorage.removeItem('role');\n    }\n    setRole(role);\n  };\n\n  return (\n    <AuthContext.Provider value={{ role, setRole: setAuthUserRole }}>\n      <div className=\"App\">\n        <div className=\"h-100 w-100\">\n          <Loader\n            style={{ position: 'relative', top: '50%', left: '50%'}}\n            promiseTracker={usePromiseTracker}\n            color=\"#282c34\"\n            background=\"rgba(255,255,255,0.200)\"\n          />\n        </div>\n        <ErrorBoundries>\n          <Header className=\"navbar\"/>\n          <br></br>\n          <MainComponent />\n        </ErrorBoundries>\n      </div>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from \"./app/app\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}